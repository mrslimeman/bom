using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;

using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;



using Microsoft.Kinect;

using System.Drawing;
using System.Threading;
using System.Drawing.Imaging;
using System.IO;


namespace KinectButton
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private KinectSensor _Kinect;
        private WriteableBitmap _ColorImageBitmap;
        private Int32Rect _ColorImageBitmapRect;
        private int _ColorImageStride;
        private Skeleton[] FrameSkeletons;

        List<Button> buttons;
        static Button selected;

        // hand value
        float handX;
        float handY;

        // hipcenter value
        float hipX, hipY;
        float hipX1, hipY1;
        float hipX2, hipY2;
        float hipX3, hipY3;
        float hipX4, hipY4;
        float hipX5, hipY5;
        float hipX6, hipY6;
        float hipX7, hipY7;
        float hipX8, hipY8;
        float hipX9, hipY9;

        // knee value
        float kneeX, kneeY;
        float kneeX1, kneeY1;
        float kneeX2, kneeY2;
        float kneeX3, kneeY3;
        float kneeX4, kneeY4;
        float kneeX5, kneeY5;
        float kneeX6, kneeY6;
        float kneeX7, kneeY7;
        float kneeX8, kneeY8;
        float kneeX9, kneeY9;


        private static Bitmap bmpScreenshot;
        private static Graphics gfxScreenshot;

        public MainWindow()
        {
            InitializeComponent();

            InitializeButtons();
            kinectButton.Click += new RoutedEventHandler(kinectButton_Click);

            this.Loaded += (s, e) => { DiscoverKinectSensor(); };
            this.Unloaded += (s, e) => { this.Kinect = null; };
        }


        //initialize buttons to be checked
        private void InitializeButtons()
        {
            buttons = new List<Button> { button1, button2, button3,
                button4, button5, button6, button7, button8, button9, button10,
                button11, button12, button13, button14, button15, button16,
                button17, button18, button19, button20, button21, button22,
                button23, button24, button25, button26, buttonS, buttonM, buttonL, buttonXL, quitButton };
        }

        //raise event for Kinect sensor status changed
        private void DiscoverKinectSensor()
        {
            KinectSensor.KinectSensors.StatusChanged += KinectSensors_StatusChanged;
            this.Kinect = KinectSensor.KinectSensors.FirstOrDefault(x => x.Status == KinectStatus.Connected);
        }

        private void KinectSensors_StatusChanged(object sender, StatusChangedEventArgs e)
        {
            switch (e.Status)
            {
                case KinectStatus.Connected:
                    if (this.Kinect == null)
                    {
                        this.Kinect = e.Sensor;
                    }
                    break;
                case KinectStatus.Disconnected:
                    if (this.Kinect == e.Sensor)
                    {
                        this.Kinect = null;
                        this.Kinect = KinectSensor.KinectSensors.FirstOrDefault(x => x.Status == KinectStatus.Connected);
                        if (this.Kinect == null)
                        {
                            MessageBox.Show("Sensor Disconnected. Please reconnect to continue.");
                        }
                    }
                    break;
            }
        }

        public KinectSensor Kinect
        {
            get { return this._Kinect; }
            set
            {
                if (this._Kinect != value)
                {
                    if (this._Kinect != null)
                    {
                        UninitializeKinectSensor(this._Kinect);
                        this._Kinect = null;
                    }
                    if (value != null && value.Status == KinectStatus.Connected)
                    {
                        this._Kinect = value;
                        InitializeKinectSensor(this._Kinect);
                    }
                }
            }
        }

        private void UninitializeKinectSensor(KinectSensor kinectSensor)
        {
            if (kinectSensor != null)
            {
                kinectSensor.Stop();
                kinectSensor.ColorFrameReady -= Kinect_ColorFrameReady;
                kinectSensor.SkeletonFrameReady -= Kinect_SkeletonFrameReady;
            }
        }

        private void InitializeKinectSensor(KinectSensor kinectSensor)
        {
            if (kinectSensor != null)
            {
                ColorImageStream colorStream = kinectSensor.ColorStream;
                colorStream.Enable();
                this._ColorImageBitmap = new WriteableBitmap(colorStream.FrameWidth, colorStream.FrameHeight,
                    96, 96, PixelFormats.Bgr32, null);
                this._ColorImageBitmapRect = new Int32Rect(0, 0, colorStream.FrameWidth, colorStream.FrameHeight);
                this._ColorImageStride = colorStream.FrameWidth * colorStream.FrameBytesPerPixel;
                videoStream.Source = this._ColorImageBitmap;

                kinectSensor.SkeletonStream.Enable(new TransformSmoothParameters()
                {
                    Correction = 0.5f,
                    JitterRadius = 0.05f,
                    MaxDeviationRadius = 0.04f,
                    Smoothing = 0.5f
                });

                kinectSensor.SkeletonFrameReady += Kinect_SkeletonFrameReady;
                kinectSensor.ColorFrameReady += Kinect_ColorFrameReady;
                kinectSensor.Start();
                this.FrameSkeletons = new Skeleton[this.Kinect.SkeletonStream.FrameSkeletonArrayLength];

            }
        }

        private void Kinect_ColorFrameReady(object sender, ColorImageFrameReadyEventArgs e)
        {
            using (ColorImageFrame frame = e.OpenColorImageFrame())
            {
                if (frame != null)
                {
                    byte[] pixelData = new byte[frame.PixelDataLength];
                    frame.CopyPixelDataTo(pixelData);
                    this._ColorImageBitmap.WritePixels(this._ColorImageBitmapRect, pixelData,
                        this._ColorImageStride, 0);
                }
            }
        }
        //new skeleton joint 
        private void Kinect_SkeletonFrameReady(object sender, SkeletonFrameReadyEventArgs e)
        {
            using (SkeletonFrame frame = e.OpenSkeletonFrame())
            {
                if (frame != null)
                {
                    frame.CopySkeletonDataTo(this.FrameSkeletons);
                    Skeleton skeleton = GetPrimarySkeleton(this.FrameSkeletons);

                    if (skeleton == null)
                    {
                        kinectButton.Visibility = Visibility.Collapsed;
                    }
                    else
                    {
                        Joint primaryHand = GetPrimaryHand(skeleton);
                        Joint hipcenter = GetPrimaryHip(skeleton);
                        Joint kn = GetPrimaryKn(skeleton);
                        TrackHip(hipcenter);
                        TrackHand(primaryHand);
                        TrackKnee(kn);

                    }
                }
            }
        }

        //track and display hand
        private void TrackHand(Joint hand)
        {
            if (hand.TrackingState == JointTrackingState.NotTracked)
            {
                kinectButton.Visibility = System.Windows.Visibility.Collapsed;
            }
            else
            {
                kinectButton.Visibility = System.Windows.Visibility.Visible;
                
                DepthImagePoint point = this.Kinect.MapSkeletonPointToDepth(hand.Position, DepthImageFormat.Resolution640x480Fps30);
                handX = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (kinectButton.ActualWidth / 2.0));
                handY = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (kinectButton.ActualHeight / 2.0));
                Canvas.SetLeft(kinectButton, handX);
                Canvas.SetTop(kinectButton, handY);

                if (isHandOver(kinectButton, buttons)) kinectButton.Hovering();
                else kinectButton.Release();
                if (hand.JointType == JointType.HandRight)
                {
                    kinectButton.ImageSource = "/Images/RightHand.png";
                    kinectButton.ActiveImageSource = "/Images/RightHand.png";
                }
                else
                {
                    kinectButton.ImageSource = "/Images/LeftHand.png";
                    kinectButton.ActiveImageSource = "/Images/LeftHand.png";
                }
            }
        }

        //detect if hand is overlapping over any button
        private bool isHandOver(FrameworkElement hand, List<Button> buttonslist)
        {
            var handTopLeft = new System.Windows.Point(Canvas.GetLeft(hand), Canvas.GetTop(hand));
            var handX = handTopLeft.X + hand.ActualWidth / 2;
            var handY = handTopLeft.Y + hand.ActualHeight / 2;

            foreach (Button target in buttonslist)
            {
                if (target.Visibility != Visibility.Hidden) { //disable a hidden button for select true button
                    System.Windows.Point targetTopLeft = new System.Windows.Point(Canvas.GetLeft(target), Canvas.GetTop(target));
                    if (handX > targetTopLeft.X &&
                        handX < targetTopLeft.X + target.Width &&
                        handY > targetTopLeft.Y &&
                        handY < targetTopLeft.Y + target.Height)
                    {
                        selected = target;
                        return true;
                    }
                }
            }
            return false;
        }

        //get the hand closest to the Kinect sensor
        private static Joint GetPrimaryHand(Skeleton skeleton)
        {
            Joint primaryHand = new Joint();
            if (skeleton != null)
            {
                primaryHand = skeleton.Joints[JointType.HandLeft];
                Joint rightHand = skeleton.Joints[JointType.HandRight];
                if (rightHand.TrackingState != JointTrackingState.NotTracked)
                {
                    if (primaryHand.TrackingState == JointTrackingState.NotTracked)
                    {
                        primaryHand = rightHand;
                    }
                    else
                    {
                        if (primaryHand.Position.Z > rightHand.Position.Z)
                        {
                            primaryHand = rightHand;
                        }
                    }
                }
            }
            return primaryHand;
        }
       

        //get the skeleton closest to the Kinect sensor
        private static Skeleton GetPrimarySkeleton(Skeleton[] skeletons)
        {
            Skeleton skeleton = null;
            if (skeletons != null)
            {
                for (int i = 0; i < skeletons.Length; i++)
                {
                    if (skeletons[i].TrackingState == SkeletonTrackingState.Tracked)
                    {
                        if (skeleton == null)
                        {
                            skeleton = skeletons[i];
                        }
                        else
                        {
                            if (skeleton.Position.Z > skeletons[i].Position.Z)
                            {
                                skeleton = skeletons[i];
                            }
                        }
                    }
                }
            }
            return skeleton;
        }
        private void TrackHip(Joint hipc)
        {
            
            if (hipc.TrackingState == JointTrackingState.NotTracked)
            {
                // kinectButton.Visibility = System.Windows.Visibility.Collapsed;
            }
            else 
            {
                // kinectButton.Visibility = System.Windows.Visibility.Visible;
                // top male detection
                DepthImagePoint point = this.Kinect.MapSkeletonPointToDepth(hipc.Position, DepthImageFormat.Resolution640x480Fps30);
                hipX = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image1.ActualWidth / 2.0));
                hipY = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image1.ActualHeight / 2.0));
                hipX1 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image2.ActualWidth / 2.0));
                hipY1 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image2.ActualHeight / 2.0));
                hipX2 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image3.ActualWidth / 2.0));
                hipY2 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image3.ActualHeight / 2.0));
                hipX3 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image4.ActualWidth / 2.0));
                hipY3 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image4.ActualHeight / 2.0));
                hipX4 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image5.ActualWidth / 2.0));
                hipY4 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image5.ActualHeight / 2.0));
                hipX5 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image11.ActualWidth / 2.0));
                hipY5 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image11.ActualHeight / 2.0));
                hipX6 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image12.ActualWidth / 2.0));
                hipY6 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image13.ActualHeight / 2.0));
                hipX7 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                   (Image14.ActualWidth / 2.0));
                hipY7 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image14.ActualHeight / 2.0));
                hipX8 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image15.ActualWidth / 2.0));
                hipY8 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image15.ActualHeight / 2.0));
                hipX9 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image15.ActualWidth / 2.0));
                hipY9 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image15.ActualHeight / 2.0));


                Canvas.SetLeft(Image1, hipX);
                Canvas.SetTop(Image1, hipY);
                Canvas.SetLeft(Image2, hipX1);
                Canvas.SetTop(Image2, hipY1);
                Canvas.SetLeft(Image3, hipX2);
                Canvas.SetTop(Image3, hipY2);
                Canvas.SetLeft(Image4, hipX3);
                Canvas.SetTop(Image4, hipY3);
                Canvas.SetLeft(Image5, hipX4);
                Canvas.SetTop(Image5, hipY4);
                Canvas.SetLeft(Image11, hipX5);
                Canvas.SetTop(Image11, hipY5);
                Canvas.SetLeft(Image12, hipX6);
                Canvas.SetTop(Image12, hipY6);
                Canvas.SetLeft(Image13, hipX7);
                Canvas.SetTop(Image13, hipY7);
                Canvas.SetLeft(Image14, hipX8);
                Canvas.SetTop(Image14, hipY8);
                Canvas.SetLeft(Image15, hipX9);
                Canvas.SetTop(Image15, hipY9);



            }
        }
        private static Joint GetPrimaryHip(Skeleton skeleton)
        {
            Joint primaryHip = new Joint();
            if (skeleton != null)
            {
                primaryHip = skeleton.Joints[JointType.Spine];
                Joint hipcenter = skeleton.Joints[JointType.Spine];
                if (hipcenter.TrackingState != JointTrackingState.NotTracked)
                {
                    if (primaryHip.TrackingState == JointTrackingState.NotTracked)
                    {
                        primaryHip = hipcenter;
                    }
                    else
                    {
                        if (primaryHip.Position.Z > hipcenter.Position.Z)
                        {
                            primaryHip = hipcenter;
                        }
                    }
                }
            }
            return primaryHip;
        }
        private static Joint GetPrimaryKn(Skeleton skeleton)
        {
            Joint primaryKn = new Joint();
            if (skeleton != null)
            {
                primaryKn = skeleton.Joints[JointType.KneeLeft];
                Joint Kneeright = skeleton.Joints[JointType.KneeRight];
                if (Kneeright.TrackingState != JointTrackingState.NotTracked)
                {
                    if (primaryKn.TrackingState == JointTrackingState.NotTracked)
                    {
                        primaryKn = Kneeright;
                    }
                  
                }
            }
            return primaryKn;
        }
        private void TrackKnee(Joint hand)
        {
            if (hand.TrackingState == JointTrackingState.NotTracked)
            {
                //kinectButton.Visibility = System.Windows.Visibility.Collapsed;
            }
            else
            {
                // kinectButton.Visibility = System.Windows.Visibility.Visible;
                //bottom male detection
                DepthImagePoint point = this.Kinect.MapSkeletonPointToDepth(hand.Position, DepthImageFormat.Resolution640x480Fps30);
                kneeX = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image6.ActualWidth / 2.0));
                kneeY = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image6.ActualHeight / 2.0));
                kneeX1 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image7.ActualWidth / 2.0));
                kneeY1 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image7.ActualHeight / 2.0));
                kneeX2 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image8.ActualWidth / 2.0));
                kneeY2 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image8.ActualHeight / 2.0));
                kneeX3 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image9.ActualWidth / 2.0));
                kneeY3 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image9.ActualHeight / 2.0));
                kneeX4 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image10.ActualWidth / 2.0));
                kneeY4 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image10.ActualHeight / 2.0));
                kneeX5 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image16.ActualWidth / 2.0));
                kneeY5 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image16.ActualHeight / 2.0));
                kneeX6 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image17.ActualWidth / 2.0));
                kneeY6 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image17.ActualHeight / 2.0));
                kneeX7 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image18.ActualWidth / 2.0));
                kneeY7 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image18.ActualHeight / 2.0));
                kneeX8 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image19.ActualWidth / 2.0));
                kneeY8 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image19.ActualHeight / 2.0));
                kneeX9 = (int)((point.X * LayoutRoot.ActualWidth / this.Kinect.DepthStream.FrameWidth) -
                    (Image20.ActualWidth / 2.0));
                kneeY9 = (int)((point.Y * LayoutRoot.ActualHeight / this.Kinect.DepthStream.FrameHeight) -
                    (Image20.ActualHeight / 2.0));


                Canvas.SetLeft(Image6, kneeX);
                Canvas.SetTop(Image6, kneeY);
                Canvas.SetLeft(Image7, kneeX1);
                Canvas.SetTop(Image7, kneeY1);
                Canvas.SetLeft(Image8, kneeX2);
                Canvas.SetTop(Image8, kneeY2);
                Canvas.SetLeft(Image9, kneeX3);
                Canvas.SetTop(Image9, kneeY3);
                Canvas.SetLeft(Image10, kneeX4);
                Canvas.SetTop(Image10, kneeY4);
                Canvas.SetLeft(Image16, kneeX5);
                Canvas.SetTop(Image16, kneeY5);
                Canvas.SetLeft(Image17, kneeX6);
                Canvas.SetTop(Image17, kneeY6);
                Canvas.SetLeft(Image18, kneeX7);
                Canvas.SetTop(Image18, kneeY7);
                Canvas.SetLeft(Image19, kneeX8);
                Canvas.SetTop(Image19, kneeY8);
                Canvas.SetLeft(Image20, kneeX9);
                Canvas.SetTop(Image20, kneeY9);
            }
        }





        void kinectButton_Click(object sender, RoutedEventArgs e)
        {
            selected.RaiseEvent(new RoutedEventArgs(Button.ClickEvent, selected));
        }

        void button1_Click(object sender, RoutedEventArgs e)
        {
            //when choose male hidden button 
            button16.Visibility = Visibility.Hidden;
            button17.Visibility = Visibility.Hidden;
            //when choose male visible button
            button3.Visibility = Visibility.Visible;
            button4.Visibility = Visibility.Visible;

            Image11.Visibility = Visibility.Hidden;
            Image12.Visibility = Visibility.Hidden;
            Image13.Visibility = Visibility.Hidden;
            Image14.Visibility = Visibility.Hidden;
            Image15.Visibility = Visibility.Hidden;
            Image16.Visibility = Visibility.Hidden;
            Image17.Visibility = Visibility.Hidden;
            Image18.Visibility = Visibility.Hidden;
            Image19.Visibility = Visibility.Hidden;
            Image20.Visibility = Visibility.Hidden;


        }

        private void button2_Click(object sender, RoutedEventArgs e)
        {
            //when choose male hidden button 
            button3.Visibility = Visibility.Hidden;
            button4.Visibility = Visibility.Hidden;
            //when choose male visible button
            button16.Visibility = Visibility.Visible;
            button17.Visibility = Visibility.Visible;

            Image1.Visibility = Visibility.Hidden;
            Image2.Visibility = Visibility.Hidden;
            Image3.Visibility = Visibility.Hidden;
            Image4.Visibility = Visibility.Hidden;
            Image5.Visibility = Visibility.Hidden;
            Image6.Visibility = Visibility.Hidden;
            Image7.Visibility = Visibility.Hidden;
            Image8.Visibility = Visibility.Hidden;
            Image9.Visibility = Visibility.Hidden;
            Image10.Visibility = Visibility.Hidden;


        } 

        private void button3_Click(object sender, RoutedEventArgs e)
        {
            //visible Male Mode
            button6.Visibility = Visibility.Visible;
            button7.Visibility = Visibility.Visible;
            button8.Visibility = Visibility.Visible;
            button9.Visibility = Visibility.Visible;
            button10.Visibility = Visibility.Visible;
            
            //hidden Male Mode
            button11.Visibility = Visibility.Hidden;
            button12.Visibility = Visibility.Hidden;
            button13.Visibility = Visibility.Hidden;
            button14.Visibility = Visibility.Hidden;
            button15.Visibility = Visibility.Hidden;
          
        }

        private void button4_Click(object sender, RoutedEventArgs e)
        {
            //visible Male Mode
            button11.Visibility = Visibility.Visible;
            button12.Visibility = Visibility.Visible;
            button13.Visibility = Visibility.Visible;
            button14.Visibility = Visibility.Visible;
            button15.Visibility = Visibility.Visible;
            
            //hidden Male Mode
            button6.Visibility = Visibility.Hidden;
            button7.Visibility = Visibility.Hidden;
            button8.Visibility = Visibility.Hidden;
            button9.Visibility = Visibility.Hidden;
            button10.Visibility = Visibility.Hidden;
           
        }

        private void button5_Click(object sender, RoutedEventArgs e)
        {

            String fileName = "D:\\gg\\" + DateTime.Now.ToString("yyyyMMdd_hhmmss") + ".jpg";
            bmpScreenshot = new Bitmap(System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width, System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height, System.Drawing.Imaging.PixelFormat.Format32bppArgb);

                gfxScreenshot = Graphics.FromImage(bmpScreenshot);

                gfxScreenshot.CopyFromScreen(System.Windows.Forms.Screen.PrimaryScreen.Bounds.X, System.Windows.Forms.Screen.PrimaryScreen.Bounds.Y, 0, 0, System.Windows.Forms.Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);

                bmpScreenshot.Save(fileName, ImageFormat.Jpeg);

                gfxScreenshot.Dispose();
              
            
            message.Content = "ถ่ายภาพสำเร็จ!";
          }

        private void button6_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image1.Visibility = Visibility.Visible;
            //hidden
            Image2.Visibility = Visibility.Hidden;
            Image3.Visibility = Visibility.Hidden;
            Image4.Visibility = Visibility.Hidden;
            Image5.Visibility = Visibility.Hidden;
            message.Content = "เสื้อแขนสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย" ;
        }
        private void button7_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image2.Visibility = Visibility.Visible;
            //hidden
            Image1.Visibility = Visibility.Hidden;
            Image3.Visibility = Visibility.Hidden;
            Image4.Visibility = Visibility.Hidden;
            Image5.Visibility = Visibility.Hidden;

            message.Content = "เสื้อแขนสั้น, ชนิดผ้า: ผ้าฝ้าย, ประเภท: ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button8_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image3.Visibility = Visibility.Visible;
            //hidden
            Image1.Visibility = Visibility.Hidden;
            Image2.Visibility = Visibility.Hidden;
            Image4.Visibility = Visibility.Hidden;
            Image5.Visibility = Visibility.Hidden;
            message.Content = "เสื้อแขนสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button9_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image4.Visibility = Visibility.Visible;
            //hidden
            Image2.Visibility = Visibility.Hidden;
            Image3.Visibility = Visibility.Hidden;
            Image1.Visibility = Visibility.Hidden;
            Image5.Visibility = Visibility.Hidden;
            message.Content = "เสื้อแขนสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button10_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image5.Visibility = Visibility.Visible;
            //hidden
            Image2.Visibility = Visibility.Hidden;
            Image3.Visibility = Visibility.Hidden;
            Image4.Visibility = Visibility.Hidden;
            Image1.Visibility = Visibility.Hidden;
            message.Content = "เสื้อแขนสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button11_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image6.Visibility = Visibility.Visible;
            //hidden
            Image7.Visibility = Visibility.Hidden;
            Image8.Visibility = Visibility.Hidden;
            Image9.Visibility = Visibility.Hidden;
            Image10.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button12_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image7.Visibility = Visibility.Visible;
            //hidden
            Image6.Visibility = Visibility.Hidden;
            Image8.Visibility = Visibility.Hidden;
            Image9.Visibility = Visibility.Hidden;
            Image10.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button13_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image8.Visibility = Visibility.Visible;
            //hidden
            Image6.Visibility = Visibility.Hidden;
            Image7.Visibility = Visibility.Hidden;
            Image9.Visibility = Visibility.Hidden;
            Image10.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button14_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image9.Visibility = Visibility.Visible;
            //hidden
            Image6.Visibility = Visibility.Hidden;
            Image7.Visibility = Visibility.Hidden;
            Image8.Visibility = Visibility.Hidden;
            Image10.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button15_Click(object sender, RoutedEventArgs e)
        {

            //visible
            Image10.Visibility = Visibility.Visible;
            //hidden
            Image6.Visibility = Visibility.Hidden;
            Image7.Visibility = Visibility.Hidden;
            Image8.Visibility = Visibility.Hidden;
            Image9.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";
        }
        private void button16_Click(object sender, RoutedEventArgs e)
        {

            //visible Male Mode
            message.Content = "Button 3 clicked!";



            //hidden Male Mode
            button11.Visibility = Visibility.Hidden;
            button12.Visibility = Visibility.Hidden;
            button13.Visibility = Visibility.Hidden;
            button14.Visibility = Visibility.Hidden;
            button15.Visibility = Visibility.Hidden;
            button6.Visibility = Visibility.Hidden;
            button7.Visibility = Visibility.Hidden;
            button8.Visibility = Visibility.Hidden;
            button9.Visibility = Visibility.Hidden;
            button10.Visibility = Visibility.Hidden;
            button18.Visibility = Visibility.Hidden;
            button19.Visibility = Visibility.Hidden;
            button20.Visibility = Visibility.Hidden;
            button21.Visibility = Visibility.Hidden;
            button22.Visibility = Visibility.Hidden;


            // visible female Mode
            button23.Visibility = Visibility.Visible;
            button24.Visibility = Visibility.Visible;
            button25.Visibility = Visibility.Visible;
            button26.Visibility = Visibility.Visible;
            // button22.Visibility = Visibility.Visible;


        }
        private void button17_Click(object sender, RoutedEventArgs e)
        {
            //hidden Male Mode
            button11.Visibility = Visibility.Hidden;
            button12.Visibility = Visibility.Hidden;
            button13.Visibility = Visibility.Hidden;
            button14.Visibility = Visibility.Hidden;
            button15.Visibility = Visibility.Hidden;
            button6.Visibility = Visibility.Hidden;
            button7.Visibility = Visibility.Hidden;
            button8.Visibility = Visibility.Hidden;
            button9.Visibility = Visibility.Hidden;
            button10.Visibility = Visibility.Hidden;
            button23.Visibility = Visibility.Hidden;
            button24.Visibility = Visibility.Hidden;
            button25.Visibility = Visibility.Hidden;
            button26.Visibility = Visibility.Hidden;
            // button22.Visibility = Visibility.Visible;


            // visible female Mode
            button18.Visibility = Visibility.Visible;
            button19.Visibility = Visibility.Visible;
            button20.Visibility = Visibility.Visible;
            button21.Visibility = Visibility.Visible;
            button22.Visibility = Visibility.Visible;

        }
        private void button18_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image11.Visibility = Visibility.Visible;
            //hidden
            Image12.Visibility = Visibility.Hidden;
            Image13.Visibility = Visibility.Hidden;
            Image14.Visibility = Visibility.Hidden;
            Image15.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button19_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image12.Visibility = Visibility.Visible;
            //hidden
            Image11.Visibility = Visibility.Hidden;
            Image13.Visibility = Visibility.Hidden;
            Image14.Visibility = Visibility.Hidden;
            Image15.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button20_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image13.Visibility = Visibility.Visible;
            //hidden
            Image11.Visibility = Visibility.Hidden;
            Image12.Visibility = Visibility.Hidden;
            Image14.Visibility = Visibility.Hidden;
            Image15.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button21_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image14.Visibility = Visibility.Visible;
            //hidden
            Image11.Visibility = Visibility.Hidden;
            Image12.Visibility = Visibility.Hidden;
            Image13.Visibility = Visibility.Hidden;
            Image15.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button22_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image15.Visibility = Visibility.Visible;
            //hidden
            Image11.Visibility = Visibility.Hidden;
            Image12.Visibility = Visibility.Hidden;
            Image13.Visibility = Visibility.Hidden;
            Image14.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button23_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image16.Visibility = Visibility.Visible;
            //hidden
            Image17.Visibility = Visibility.Hidden;
            Image18.Visibility = Visibility.Hidden;
            Image19.Visibility = Visibility.Hidden;
            Image20.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button24_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image17.Visibility = Visibility.Visible;
            //hidden
            Image16.Visibility = Visibility.Hidden;
            Image18.Visibility = Visibility.Hidden;
            Image19.Visibility = Visibility.Hidden;
            Image20.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button25_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image18.Visibility = Visibility.Visible;
            //hidden
            Image16.Visibility = Visibility.Hidden;
            Image17.Visibility = Visibility.Hidden;
            Image19.Visibility = Visibility.Hidden;
            Image20.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void button26_Click(object sender, RoutedEventArgs e)
        {
            //visible
            Image19.Visibility = Visibility.Visible;
            //hidden
            Image16.Visibility = Visibility.Hidden;
            Image17.Visibility = Visibility.Hidden;
            Image18.Visibility = Visibility.Hidden;
            Image20.Visibility = Visibility.Hidden;
            message.Content = "กางเกงขาสั้น, ชนิดผ้า:ผ้าฝ้าย, ประเภท:ชุดร่วมสมัย เพศ:ชาย";

        }
        private void buttonS_Click(object sender, RoutedEventArgs e)
        {
            //img resize S
            Image1.Height = 250;
            Image1.Width = 240;
            Image2.Height = 250;
            Image2.Width = 240;
            Image3.Height = 250;
            Image3.Width = 240;
            Image4.Height = 250;
            Image4.Width = 240;
            Image5.Height = 250;
            Image5.Width = 240;                               
        }
        private void buttonM_Click(object sender, RoutedEventArgs e)
        {
            //img resize M
            Image1.Height = 260;
            Image1.Width = 290;
            Image2.Height = 260;
            Image2.Width = 290;
            Image3.Height = 260;
            Image3.Width = 290;
            Image4.Height = 260;
            Image4.Width = 290;
            Image5.Height = 260;
            Image5.Width = 290;

        }
       
        
        private void quitButton_Click(object sender, RoutedEventArgs e)
        {
                    
            Application.Current.Shutdown();
        }
    }
}
